1. 글 작성후 > 글 목록 화면으로 넘어옴
이때, 인기순이라던가 아니면 예를 들어 조회순이라든가
그런 시그이 필터를 어떻게 처리?

a)필터 컴포넌트를 만든다 
b)그 컴포넌트를 이용해서 뭔가 필터를 선택하면 (ex: 인기순) api 호출을 한다. 
c) 서버에서 응답이 내려옴, 페이지가 포함된 결과일 수도 있음
d)  클라이언트는 해당 내용을 렌더링 한다.\

반대로 서버에서 해줘야 하는것은?
예를들어 그 목록을 가져오는 endpoint 가 "GET /posts라면 여기에 쿼리 스트링으로
필터 값을 넘길 수 있게 만들어 주면 처리가 수월할듯

예시) 인기순 조회 => "GET /potst?sort=popularity"
조회순 기준 => "GET /posts?sort=view_count"
필터없이 글 목록 조회 => "GET /posts"


클라이언트에서 좋아요 누를때 로그인 되어있는지 검사

비로그인과 로그인의 차이점? 추천 하트가 로그인 할때만 쓸수 있으니깐 
서비스를 더 이용하고 싶으면 가입하거나 로그인을 해
그중 하나가 하트 좋아요 누르는것
그 부분에 대한 기능 분리를 확실하게 해야함
JWT 로그인 한 유저만 JWT 를 갖는다
그러면 헤더에다가 넣어줘야함
그랬을때 서버에서 로그인 유저만 JWT를 갖게 한다면
비로그인은 헤더를 안넘겨도 되는것이냐? 라고 까지 생각을 이어감
JWT를 쓰면 토큰이 만료 되었을때만 처리한다 
ACCESS 토큰 갱신이 있어야 한다.
ACCCESS 토큰 => 로그인을 하면 얻음
REFRESH 토큰 로그인을 하며 ㄴ 얻을 수 있음

시간이 적당히 흐른뒤
access_token이 만료되었을떄 
401 허가되지 않음 unauthorized 클라이언트가 인증 되지 않았거나 유효한 인증 정보가 부족
status 를 받음
토큰 만료로 인한 401 status 반환

FE)토큰 만료 이;


과목
[7기] 인공지능 웹 서비스 프로젝트 온라인 강의실
모집 기간
22.04.13 ~ 상시
교육 기간
22.04.13 ~ 상시
내 수강 기간
23.07.10 ~ 상시
교육 진행 중
학습 공간
수업 목록
강의실
학습 정보
학습 현황

사이드 메뉴 접기




[코치] 양문규
교육자




조성진
나

메인 화면에 표시 중



[코치] 양문규
교육자




김시유




손태린
연결이 끊겼습니다.
다시 시도 중...

1 / 2





20:08
2팀 오피스아워 강의실





채팅
참여자 (5)
채팅연결: 정상
2023. 07. 10
제가 디엠 보냈습니다

7:12 PM
2023. 07. 12
[코치] 양문규
조금 더 릴렉스~한 분위기를 위해 캠과 마이크도 켜주실 수 있다면 너무 감사하겠습니다!!! 😆

7:35 PM
유희조
안녕하세요

7:40 PM
유희조
마이크랑 캠이 지금 안되서 죄송합니다

7:41 PM
[코치] 양문규
혹시 시유님 참석 여부 알고 계신 분 계시면 댓글 부탁드립니다~~

7:42 PM
[코치] 양문규
검색 (키워드)
디바운싱 할건지?
레시피 추천 리스트
크롤링은 다 같이 하기로 함 (데이터 수집)
무엇을 크롤링? => 레시피 학습을 위한 데이터
법적 이슈?
7:47 PM
유희조
아직 그정도는 정하지 않았습니다

7:48 PM
네 들려요 희조님~

8:04 PM
[코치] 양문규
조금 이상한 레시피를 수정하는 유저 참여 기능

입력하고자하는 무언가는 아마 재료일지도
재료 역시 그냥 손으로 입력하게 두면 휴먼 에러가 발생할 확률이 높을 듯
이마저도 가능하다면 자동완성 기능을 제공해야하는지
8:11 PM
[코치] 양문규
페이지네이션

서버에서 page 하나만 받는 경우
서버에서 offset, limit 이런식으로 받는 경우
…
8:12 PM
[코치] 양문규
페이지네이션 처리

Infinite Scroll
- Intersection Observer
번호로 찾아들어가는 게시판 형태
- URL 로 조작해서 들어가기 가능
8:14 PM
유희조
네

8:21 PM
[코치] 양문규
만약에, 추천 레시피를 카테고리 형태(즉, 탭 형식)로 표현하고자 한다면

카테고리 개수만큼 표현될 리스트를 전부 다 서버에서 긁어오고 시작하면 페이지가 너무 느릴 수 있음
만약에 서버에서 이 부분 고려가 필요하다면
예를 들어 카테고리를 쿼리스트링같은거로 받아서 처리하는 것도 괜찮을지도
디바운싱 vs 쓰로틀링
https://medium.com/%EC%98%A4%EB%8A%98%EC%9D%98-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/%EB%94%94%EB%B0%94%EC%9A%B4%EC%8B%B1%EA%B3%BC-%EC%93%B0%EB%A1%9C%ED%8B%80%EB%A7%81-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-e02f6bb14627

8:24 PM
[코치] 양문규
디비 + 서버 없이 간단하게 테스트 가능한 모킹 서버

https://www.npmjs.com/package/json-server#paginate

8:41 PM
[코치] 양문규
FE 디렉토리 구조

아직 정하지 않았음
일반적으로는?
pages: 첫 진입 페이지 모음집
components: 컴포넌트 모음집
hooks
API fetch 를 위한 파일
렌더링과 관련된 custom hooks
payloads / dtos / schemas
타입스크립트 인터페이스 모음집
주로 서버 통신과 관련된 인터페이스 위주
(추천) 네이밍을 통일하면 좋다.
utils 유틸 관련 (ex: 날짜 변환 함수 등)
stores
상태 관리가 들어가는 곳
리덕스는 폴더명 주로 어떻게하는지는 알아봐야할 듯
services (저의 주관적인 취향 이름)
프레임워크 레벨을 벗어난 서드파티 레벨의 코드 (ex: axios)
기타 등등 필요에 맞게…
8:48 PM
[코치] 양문규
이야기 나누어보셨으면 하는 것들

기능 기획
세부적일 필요는 없지만 대분류를 한다는 느낌으로 봤을 때 어떤 기능이 들어갈 것인지
ex) 검색 기능, 카테고리별 레시피 목록, ….
각 기능을 구현하기 위해 필요한 사전 지식이나 요구사항 대체적으로 파악하기
즉, 일정 산정
가능하다면 우선순위 역시 정하는 것이 좋을 듯
MVP 만 일단 우선적으로 추려보는 것이 필요할 것 같음
배포 및 운영 어떻게 할건지 간단하게라도(대충이라도) 얘기는 해보면 좋을 듯
자세할 필요 없이 대충이라도 정해야 나중에 급해지지 않음
각 진영(FE, BE 등등)마다 프로젝트를 실제로 개발을 시작하기 위한 마무리 준비를 어떻게 할건지
조금은 더 구체적인 기술 스펙
디렉토리 구조
상세 기능 일정 산정 (각 진영 내에서 조금 더 세부적으로)
…
8:54 PM
[코치] 양문규
위 내용은 제가 정리 후 디스코드 혹은 노션에 기입 후 다시 공유 드리겠습니다!

8:59 PM
2023. 07. 13
[코치] 진현두
git clone https://github.com/skku-taehwan/KoreanRecipeGPT.git

8:55 PM
2023. 07. 14
김시유
https://www.youtube.com/watch?v=LDycLCeFuDg

9:14 PM
김시유
https://github.com/younhoso/younhoso/tree/main/blogExample/kakaoLogin/

9:19 PM
김시유
https://triplexblog.kr/55

9:20 PM
김시유
https://www.inflearn.com/course/%EB%94%B0%EB%9D%BC%ED%95%98%EB%8A%94-%EB%84%A4%EC%8A%A4%ED%8A%B8-%EC%A0%9C%EC%9D%B4%EC%97%90%EC%8A%A4/dashboard

9:25 PM
2023. 07. 18
질문 1. 정규식에 관해서 (이메일 로그인 구현)

7:40 PM
손태린
https://mohaemukji.atlassian.net/jira/software/projects/IPZY/boards/1

7:47 PM
[코치] 양문규
mgyang95@gmail.com

7:48 PM
2023. 07. 20
[코치] 진현두
https://github.com/huggingface/transformers/blob/main/examples/legacy/run_language_modeling.py#L199

6:30 PM
김시유
ERROR: Error reading “config\config.js”. Error: undefined

6:36 PM
김시유
export const config = {
username: ‘root’,
password: ‘1234’,
database: ‘team2’,
host: ‘127.0.0.1’,
dialect: ‘mysql’,
};

6:37 PM
2023. 07. 21
[코치] 양문규
https://codesandbox.io/s/city-debounce-sphzk?file=/src/getCity.js

👆 디바운싱 + 리액트 예제입니다!

7:43 PM
[코치] 양문규
글 작성 후 > 글 목록 화면으로 넘어옴
이 때, 인기순이라든가 아니면 예를 들어 조회순이라든가 그런 식의 필터 어떻게 처리?
=> 가장 일반적인 예시)
a) 필터 컴포넌트를 만든다.
b) 그리고 그 컴포넌트를 이용해서 뭔가 필터를 선택하면(ex: 인기순) API 호출
c) 서버에서 응답이 내려옴, 페이지가 포함된 결과일 수도 있음
d) 클라이언트는 해당 내용을 렌더링 함
7:50 PM
[코치] 양문규
글 작성 후 > 글 목록 화면으로 넘어옴
이 때, 인기순이라든가 아니면 예를 들어 조회순이라든가 그런 식의 필터 어떻게 처리?
=> 가장 일반적인 예시)
a) 필터 컴포넌트를 만든다.
b) 그리고 그 컴포넌트를 이용해서 뭔가 필터를 선택하면(ex: 인기순) API 호출
c) 서버에서 응답이 내려옴, 페이지가 포함된 결과일 수도 있음
d) 클라이언트는 해당 내용을 렌더링 함
그러면 반대로 서버에서 해줘야하는 것은?
예를 들어 글 목록을 가져오는 endpoint 가 “GET /posts” 라면, 여기에 쿼리스트링으로 필터 값을 넘길 수 있게 만들어주면 처리가 수월할 듯

예시)
필터없이 글 목록 조회 => “GET /posts”
인기순 기준 => “GET /posts?sort=popularity”
조회수 기준 => “GET /posts?sort=view_count”

[코치] 양문규
기능명세서 > 로그인
토큰 만료에 대한 처리가 가능한 API 부재
access_token => 로그인을 하면 얻을 수 있음
refresh_token => 로그인을 하면 얻을 수 있음

시간이 적당히 흐른 뒤
access_token 이 만료되었을 때
FE) 토큰 만료로 인한 401 status 를 받음
BE) 토큰 만료로 인한 401 status 반환

FE) 토큰 만료 이후 refresh_token 을 사용해 access_token 을 갱신
BE) access_token 갱신 처리 필요

과목
[7기] 인공지능 웹 서비스 프로젝트 온라인 강의실
모집 기간
22.04.13 ~ 상시
교육 기간
22.04.13 ~ 상시
내 수강 기간
23.07.10 ~ 상시
교육 진행 중
학습 공간
수업 목록
강의실
학습 정보
학습 현황

사이드 메뉴 접기




[코치] 양문규
교육자




조성진
나

메인 화면에 표시 중



[코치] 양문규
교육자




김시유




손태린
연결이 끊겼습니다.
다시 시도 중...

1 / 2





20:09
2팀 오피스아워 강의실





채팅
참여자 (5)
채팅연결: 정상
2023. 07. 10
제가 디엠 보냈습니다

7:12 PM
2023. 07. 12
[코치] 양문규
조금 더 릴렉스~한 분위기를 위해 캠과 마이크도 켜주실 수 있다면 너무 감사하겠습니다!!! 😆

7:35 PM
유희조
안녕하세요

7:40 PM
유희조
마이크랑 캠이 지금 안되서 죄송합니다

7:41 PM
[코치] 양문규
혹시 시유님 참석 여부 알고 계신 분 계시면 댓글 부탁드립니다~~

7:42 PM
[코치] 양문규
검색 (키워드)
디바운싱 할건지?
레시피 추천 리스트
크롤링은 다 같이 하기로 함 (데이터 수집)
무엇을 크롤링? => 레시피 학습을 위한 데이터
법적 이슈?
7:47 PM
유희조
아직 그정도는 정하지 않았습니다

7:48 PM
네 들려요 희조님~

8:04 PM
[코치] 양문규
조금 이상한 레시피를 수정하는 유저 참여 기능

입력하고자하는 무언가는 아마 재료일지도
재료 역시 그냥 손으로 입력하게 두면 휴먼 에러가 발생할 확률이 높을 듯
이마저도 가능하다면 자동완성 기능을 제공해야하는지
8:11 PM
[코치] 양문규
페이지네이션

서버에서 page 하나만 받는 경우
서버에서 offset, limit 이런식으로 받는 경우
…
8:12 PM
[코치] 양문규
페이지네이션 처리

Infinite Scroll
- Intersection Observer
번호로 찾아들어가는 게시판 형태
- URL 로 조작해서 들어가기 가능
8:14 PM
유희조
네

8:21 PM
[코치] 양문규
만약에, 추천 레시피를 카테고리 형태(즉, 탭 형식)로 표현하고자 한다면

카테고리 개수만큼 표현될 리스트를 전부 다 서버에서 긁어오고 시작하면 페이지가 너무 느릴 수 있음
만약에 서버에서 이 부분 고려가 필요하다면
예를 들어 카테고리를 쿼리스트링같은거로 받아서 처리하는 것도 괜찮을지도
디바운싱 vs 쓰로틀링
https://medium.com/%EC%98%A4%EB%8A%98%EC%9D%98-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/%EB%94%94%EB%B0%94%EC%9A%B4%EC%8B%B1%EA%B3%BC-%EC%93%B0%EB%A1%9C%ED%8B%80%EB%A7%81-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-e02f6bb14627

8:24 PM
[코치] 양문규
디비 + 서버 없이 간단하게 테스트 가능한 모킹 서버


8:41 PM
[코치] 양문규
FE 디렉토리 구조

아직 정하지 않았음
일반적으로는?
pages: 첫 진입 페이지 모음집
components: 컴포넌트 모음집
hooks
API fetch 를 위한 파일
렌더링과 관련된 custom hooks
payloads / dtos / schemas
타입스크립트 인터페이스 모음집
주로 서버 통신과 관련된 인터페이스 위주
(추천) 네이밍을 통일하면 좋다.
utils 유틸 관련 (ex: 날짜 변환 함수 등)
stores
상태 관리가 들어가는 곳
리덕스는 폴더명 주로 어떻게하는지는 알아봐야할 듯
services (저의 주관적인 취향 이름)
프레임워크 레벨을 벗어난 서드파티 레벨의 코드 (ex: axios)
기타 등등 필요에 맞게…
8:48 PM
[코치] 양문규
이야기 나누어보셨으면 하는 것들

기능 기획
세부적일 필요는 없지만 대분류를 한다는 느낌으로 봤을 때 어떤 기능이 들어갈 것인지
ex) 검색 기능, 카테고리별 레시피 목록, ….
각 기능을 구현하기 위해 필요한 사전 지식이나 요구사항 대체적으로 파악하기
즉, 일정 산정
가능하다면 우선순위 역시 정하는 것이 좋을 듯
MVP 만 일단 우선적으로 추려보는 것이 필요할 것 같음
배포 및 운영 어떻게 할건지 간단하게라도(대충이라도) 얘기는 해보면 좋을 듯
자세할 필요 없이 대충이라도 정해야 나중에 급해지지 않음
각 진영(FE, BE 등등)마다 프로젝트를 실제로 개발을 시작하기 위한 마무리 준비를 어떻게 할건지
조금은 더 구체적인 기술 스펙
디렉토리 구조
상세 기능 일정 산정 (각 진영 내에서 조금 더 세부적으로)
…
8:54 PM
[코치] 양문규
위 내용은 제가 정리 후 디스코드 혹은 노션에 기입 후 다시 공유 드리겠습니다!


6:36 PM
김시유
export const config = {
username: ‘root’,
password: ‘1234’,
database: ‘team2’,
host: ‘127.0.0.1’,
dialect: ‘mysql’,
};


[코치] 양문규
글 작성 후 > 글 목록 화면으로 넘어옴
이 때, 인기순이라든가 아니면 예를 들어 조회순이라든가 그런 식의 필터 어떻게 처리?
=> 가장 일반적인 예시)
a) 필터 컴포넌트를 만든다.
b) 그리고 그 컴포넌트를 이용해서 뭔가 필터를 선택하면(ex: 인기순) API 호출
c) 서버에서 응답이 내려옴, 페이지가 포함된 결과일 수도 있음
d) 클라이언트는 해당 내용을 렌더링 함
7:50 PM
[코치] 양문규
글 작성 후 > 글 목록 화면으로 넘어옴
이 때, 인기순이라든가 아니면 예를 들어 조회순이라든가 그런 식의 필터 어떻게 처리?
=> 가장 일반적인 예시)
a) 필터 컴포넌트를 만든다.
b) 그리고 그 컴포넌트를 이용해서 뭔가 필터를 선택하면(ex: 인기순) API 호출
c) 서버에서 응답이 내려옴, 페이지가 포함된 결과일 수도 있음
d) 클라이언트는 해당 내용을 렌더링 함
그러면 반대로 서버에서 해줘야하는 것은?
예를 들어 글 목록을 가져오는 endpoint 가 “GET /posts” 라면, 여기에 쿼리스트링으로 필터 값을 넘길 수 있게 만들어주면 처리가 수월할 듯

예시)
필터없이 글 목록 조회 => “GET /posts”
인기순 기준 => “GET /posts?sort=popularity”
조회수 기준 => “GET /posts?sort=view_count”



기능명세서 > 로그인
토큰 만료에 대한 처리가 가능한 API 부재
access_token => 로그인을 하면 얻을 수 있음
refresh_token => 로그인을 하면 얻을 수 있음

시간이 적당히 흐른 뒤
access_token 이 만료되었을 때
FE) 토큰 만료로 인한 401 status 를 받음
BE) 토큰 만료로 인한 401 status 반환

FE) 토큰 만료 이후 refresh_token 을 사용해 access_token 을 갱신
BE) access_token 갱신 처리 필요


로그인/비로그인 전용 기능이 무엇인지 확실하게 분리할 필요가 있음
=> 기능 세부 분리로 인한 보다 수월하게 작업 공수를 예상할 수 있을 것 같음
예시)
레시피 검색은 비로그인도 가능하지만 레시피를 만들고 싶다면 로그인을 할 것 (=즉, 레시피 만들기는 로그인 전용 API)

4.JWT 토큰을 어떻게 관리할 것인지

방법1) 쿠키에 넣는다
쿠키는 헤더가 네트워크 요청에 붙어서 간다. 응답 요청의 헤더가 있다 SET-COOKIE AWS ALB loadbenlencer
eliceseission key 
ey 는 100면 100 JWT 이다.
 
쿠키는 쿠키에 들어가 있으면 자동으로 HEADER에 붙어서 간다
값이 어떤식으로 날라왔던지 간에
SESSIONJWT 라는 것을 api의 post의 결과값으로 객체를 주고 거기에 JWT가 붙어있다. 
 
쿠키의 특징은 쿠키에 key=value형태의 값이 들어있으면 네트워크 요청시 header에 값이 붙어서 간다.
BE) REFRESH_TOKEN 을 쿠키 값으로 헤더에 넣어서 API RESPONSE 반환, ACCESS_TOKEN 을 RESPONSE BODY 로 전달

FE) 그러면 ACCESS_TOKEN 만료시 REFRESH_TOKEN API를 호출할 떄 굳이REFRESH_TOKEN 을 코드에 넣지 않아도 됨
BE) "/refresh-token" api 로 들어온 요청 헤더의 cooke 부분을 가져와 refresh_token값이 있는지 확인, 있으면
access_token 갱신

방법2) localStorage, sessionStorage 
쿠키랑 로컬이든 스토리지 류의 차이점중 하나는 첫번째로 유효기간이다
쿠키는 유효기간이 있다. 물론 무한대 설정도 가능하다 
스토리지류는 아예 그런 개념이 없다 내가 인위적으로 지우지 않는 이상 평생 유지된다.
로컬 스토리지와 세션스토리지 차이는 세션스토리지는 한 탭 안에서만 범위가 제한된다.
세션스토리지는 새로운 로그인을 다시 해야한다. 딱 나만 알고있다 공유를 하지 않는다.
스토리지와 쿠키의 차이점 중 하나는 유효기간이다.
쿠키는 유효기간을 설정할 수 있지만 (즉, 언젠가는 수명을 다한다는 얘기) 스토리지는 유효기간이라는
개념이 없기에 임의로 지우지 않으면 데이터는 무한히 유지된다. 단, session 스토리지는 브라우저 탭  간의 상태 공유를
하지 않기에 Aa탭에서 저장한 스토리지 값을 B탭에서 불러올 수 없다.  

로털 스토리지도 시크릿이나 사파리처럼 다른 회사의 브라우저에서 로그인할떄 공유 되지 않는다.
세션이 로컬보다 좁은 범위이다
BE_ ACCESS_TOKEN, REFRESH_TOKEN을 로그인과 같은 API RESPONSE로 응답
FE) 로컬스토리지 (혹은 세션 스토리지)에 값을 저장함, 그리고 다른 API를 호출 할떄마다 로컬스토리지의 값을 GETITEM으로꺼내와서 사용함

방법3) 코드 내부에 값을 access_token 저장

코드 내부에서 access_token을 관리하기 때문에 외부에서access_token이 탈취될 염려가 매우 줄어들음
코드 번들러(webpack) 여러개의 다른 종류의 파일을 하나의 파일로 뭉쳐주는것을 말한다. 묶어주고 압축해주는 역할이다.
webpack, vite 코드를 말아준다는 번들링해준다 여러개의 파일을 하나로 압축해주고 요약해주는 녀석이다
그러면 이미 정해진 파일을 가지고 뭉치는 것이기 때문에 뭉쳐진 애를 잘 보면 원본코드를 어느정도유추할 수 있다
뒤집어서 말하자면 리덕스, 사가, 다 넣었을떄 const a=1 이런식으로 이미 값을 정해준 애는 압축시켜주더라도 어느곳에 존재하고 있다.
access 토큰처럼 동적으로 값을 관리하는것 코드를 압축하는 과정에서는 없었던 것이다 그렇기 때문에 access코드가 내부에 있다면 알수 없는것이다.
좀더 안전하다는 뜻이다.

BE) access_token, refresh토큰을 코드 내부 어딘가 변수에 저장, 그리고api를 호출 할떄만다 코드내부에 토큰값을 들고있는 변수를 호출해서 값을 할당하는 방식으로 처리

spa 싱글 페이지 어플리케이션 은 모든 파일을 첫 렌더링떄 모두 다 불러온다. 첫 페이지 어디를 가든 다 불러온다 다른 페이지로 이동할떄 그 페이지에 해당하는 코드는 첫 렌더링때 가져왔기떄문에 바로 입히고 끝이다. 
페이지 새로고침을 하지 않는 react-router-dom 으로 새로고침 하지 않는다.
리엑트에서는 모든 코드를 한번에 내려받고 한번에 다 내려받고 초기로딩이 느릴수 있다. 페이지 이동은 모두 빠르다 다른 페이지로 바로바로 데이터가 바뀌어보이는 것이다. ACCESS 토큰이 다른곳으로 이동해도 초기화가 되지 
않는이유는 새로고침을 하지 않기 떄문이다.
그래서 로그인이 풀리지 않는다. 그렇기떄문에 이런 방식이 가능한 것이다.


브라우저에 설정된 폰트 사이즈 16픽셀 어르신이 폰트사이즈를 키우기떄문에 16픽셀이 아닐수 있다.  이런식으로 바꾸면 어쨋든 16이 아니다 그랬을떄 계산식이 햇갈릴수 있다. 
HTML 폰트 사이즈를 62.5% 로 나눠주면 한 1REM이 10PX 이 된다.


https://medium.com/@moonformeli






